rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // TEMPORARY: Allow read/write access for demo setup
    // TODO: Remove this after setting up demo data and replace with secure rules
    match /{document=**} {
      allow read, write: if true;
    }
    
    /* 
    // SECURE RULES (commented out for demo setup)
    // Uncomment these after setting up demo data
    
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isApproved() {
      return isAuthenticated() && 
             resource.data.approved == true;
    }
    
    function isOwner(userId) {
      return isAuthenticated() && 
             request.auth.uid == userId;
    }
    
    function isAdmin() {
      return isAuthenticated() && 
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin' &&
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.approved == true;
    }
    
    function isFaculty() {
      return isAuthenticated() && 
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'faculty' &&
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.approved == true;
    }
    
    function isStudent() {
      return isAuthenticated() && 
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'student' &&
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.approved == true;
    }

    // Users collection
    match /users/{userId} {
      // Allow user to read their own profile
      allow read: if isOwner(userId);
      
      // Allow admin to read/write all users
      allow read, write: if isAdmin();
      
      // Allow user to create their own profile (signup)
      allow create: if isOwner(userId) && 
                       request.resource.data.uid == userId &&
                       request.resource.data.approved == false;
      
      // Allow user to update their own profile (limited fields)
      allow update: if isOwner(userId) && 
                       !('role' in request.resource.data.diff(resource.data).changedKeys()) &&
                       !('approved' in request.resource.data.diff(resource.data).changedKeys()) &&
                       !('uid' in request.resource.data.diff(resource.data).changedKeys());
    }

    // Classes collection
    match /classes/{classId} {
      // Admin can read/write all classes
      allow read, write: if isAdmin();
      
      // Faculty can read classes they're assigned to
      allow read: if isFaculty() && 
                     resource.data.facultyId == request.auth.uid;
      
      // Students can read classes they're enrolled in
      allow read: if isStudent() && 
                     request.auth.uid in resource.data.students;
    }

    // Attendance collection
    match /attendance/{attendanceId} {
      // Admin can read/write all attendance
      allow read, write: if isAdmin();
      
      // Faculty can read/write attendance for their classes
      allow read, write: if isFaculty() && 
                            resource.data.facultyId == request.auth.uid;
      
      // Students can read attendance records they're part of
      allow read: if isStudent() && 
                     request.auth.uid in resource.data.records[].studentId;
    }

    // Reports collection (if you decide to store generated reports)
    match /reports/{reportId} {
      // Admin can read/write all reports
      allow read, write: if isAdmin();
      
      // Faculty can read reports for their classes
      allow read: if isFaculty() && 
                     resource.data.facultyId == request.auth.uid;
      
      // Students can read their own reports
      allow read: if isStudent() && 
                     resource.data.studentId == request.auth.uid;
    }
    */
  }
}